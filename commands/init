#!/bin/sh

usage() {
	echo "usage: git template init"
	echo ""
	echo "initialize a new template with a local bare repo"
	echo ""
	echo "    -h, --help            help"
	exit 1
}

main() {
	# sanity checks
	local re='-+h(elp)?(\ |$)'; [[ "$@" =~ $re ]] && usage
	checkBasic
	checkAlreadyExist

	echo "$GREEN""o Create a git bare repository""$CLEAR"

	# prepare default prompt values
	local baseDir=`git rev-parse --show-toplevel | pathresolve` # git project top folder
	local templateName="$(basename $baseDir).template.git" # git project top folder Name
	local templatePath=`pathresolve "$baseDir/../$templateName"` # pre-template path

	# create templatePath folder
	local err=true
	while $err; do
		local res=$templatePath
		[[ -t 0 ]] && read -rep "  $GREEN""choose path: ""$GRAY(default: '$res') $CLEAR" res
		local re='^\s*$'; [[ "$res" =~ $re ]] && res=$templatePath
		local res=`pathresolve $res`
		if false; then
			echo dbg
		#elif [ -e "$res" ]; then
		#	echo "  path already exist"
		elif [[ $res == $baseDir\/* ]]; then
			echo "  Couldn't create a repository inside another repository, consider '../' prefix"
		else
			templatePath=$res;
			echo "  path: $templatePath"
			echo -n "  $GREEN""continue? ""$CLEAR"
			yesNoPrompt
			if [ $? != 0 ]; then
				echo "  * canceled *"
				exit 0
			fi
			mkdir -p $templatePath
			if [ $? -eq 0 ]; then
				err=false;
			fi
		fi
	done

	# git bare init
	pushd $templatePath  >/dev/null 2>&1 
	git init --bare
	popd  >/dev/null 2>&1 
	if [ $? != 0 ]; then
		rm -r $templatePath
		exit 1
	fi
	
	# add submodule
	echo "$GREEN""o add template to project""$CLEAR"
	pushd $baseDir >/dev/null 2>&1 
	git submodule add $templatePath $DEFINE_TEMPLATE_PATH >/dev/null 2>&1 
	if [ ! -e "$DEFINE_TEMPLATE_PATH" ]; then
		echo "failed!"
		rm -r $templatePath
		delete
		exit 1
	fi
	popd >/dev/null 2>&1 

	# add readme
	pushd $DEFINE_TEMPLATE_PATH >/dev/null 2>&1 
	echo "  $GREEN""add readme.md""$CLEAR"
	echo "# Template" > readme.md
	git add readme.md >/dev/null 2>&1 
	git commit -m 'init' >/dev/null 2>&1 
	echo "  $GREEN""push template""$CLEAR"
	git push
	if [ $? != 0 ]; then
		rm -r $templatePath
		exit 1
	fi
	popd >/dev/null 2>&1

	# added twice?
	git submodule add $templatePath $DEFINE_TEMPLATE_PATH >/dev/null 2>&1 
	if [ ! -e "$DEFINE_TEMPLATE_PATH" ]; then
		echo "failed!"
		rm -r $templatePath
		delete
		exit 1
	fi
	popd >/dev/null 2>&1 

}

main "$@"