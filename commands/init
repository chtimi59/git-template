#!/bin/sh

usage() {
	echo "usage: git template init"
	echo ""
	echo "initialize a new template with a local bare repo"
	echo ""
	echo "    -h, --help            help"
	exit 1
}

main() {
	# sanity checks
	local re='-+h(elp)?(\ |$)'; [[ "$@" =~ $re ]] && usage
	checkBasic
	checkTemplateNotExist

	# prepare default prompt values
	local projectTopPath=`git rev-parse --show-toplevel | pathresolve` # git project top folder
	local bareRepoName="$(basename $projectTopPath).template.git"
	local bareRepoPath=`pathresolve "$projectTopPath/../$bareRepoName"`
	local bareRepoClone="$DEFINE_TEMPLATE_ROOTPATH/temp/"

	echo "$GREEN""o Create a git bare repository""$CLEAR"

	# create bare repo folder
	local err=true
	while $err; do
		local res=$bareRepoPath
		[[ -t 0 ]] && read -rep "  $GREEN""choose path: ""$GRAY(default: '$res') $CLEAR" res
		local re='^\s*$'; [[ "$res" =~ $re ]] && res=$bareRepoPath
		local res=`pathresolve $res`
		if false; then
			echo dbg
		#elif [ -e "$res" ]; then
		#	echo "  path already exist"
		elif [[ $res == $projectTopPath\/* ]]; then
			echo "  Couldn't create a repository inside another repository, consider '../' prefix"
		else
			bareRepoPath=$res;
			echo "  path: $bareRepoPath"
			echo -n "  $GREEN""continue? ""$CLEAR"
			yesNoPrompt
			if [ $? != 0 ]; then
				echo "  * canceled *"
				exit 0
			fi
			mkdir -p $bareRepoPath
			if [ $? -eq 0 ]; then
				err=false;
			fi
		fi
	done

	# git bare init
	git init --bare $bareRepoPath >/dev/null 2>&1 
	if [ $? != 0 ]; then
		echo "couldn't create $bareRepoPath"
		rm -r $bareRepoPath
		exit 1
	fi

	echo "$GREEN""o Push initial commit""$CLEAR"

	# clone submodule
	git clone $bareRepoPath $bareRepoClone >/dev/null 2>&1 
	if [ ! -e "$bareRepoClone" ]; then
		echo "clone failed!"
		rm -rf $bareRepoPath
		exit 1
	fi

	# go to temp folder
	pushd $bareRepoClone >/dev/null 2>&1 

	# make an initial commit
	echo "  add readme.md"
	echo "# Template" > readme.md
	git add . >/dev/null 2>&1 
	git commit -m 'initial' >/dev/null 2>&1 

	# push to origin (i.e. bare repo)
	echo "  push to origin"
	git push origin master >/dev/null 2>&1
	local errCode=$?

	# remove temp folder
	popd >/dev/null 2>&1
	rm -rf $DEFINE_TEMPLATE_ROOTPATH

	if [ $errCode != 0 ]; then
		echo "push failed!"
		rm -rf $bareRepoPath
		exit 1
	fi

	echo "$GREEN""o Add template to your project""$CLEAR"

	# add to project
	addTemplate "master" $bareRepoPath
	echo "  template added from local bare repository"
	echo ""

	echo "warning:"
	echo "This template is defined locally."
	echo "i.e. git-template's functionalities are also only available locally"
	echo "If you need to share it, consider to switch template origin to a remote url"
	echo ""
	echo "use: 'git template origin <url>'"
}

main "$@"